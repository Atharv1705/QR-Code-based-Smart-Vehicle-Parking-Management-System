version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: parking-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - JWT_SECRET=${JWT_SECRET:-mySecretKey12345678901234567890123456789012345678901234567890}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-}
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - parking-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./parking-frontend
      dockerfile: Dockerfile
    container_name: parking-frontend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - parking-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Backup Service (Optional)
  db-backup:
    image: alpine:latest
    container_name: parking-db-backup
    volumes:
      - ./data:/data
      - ./backups:/backups
    command: >
      sh -c "
        while true; do
          echo 'Creating database backup...'
          cp /data/parking_system.db /backups/parking_system_$(date +%Y%m%d_%H%M%S).db
          # Keep only last 7 days of backups
          find /backups -name '*.db' -mtime +7 -delete
          sleep 86400  # 24 hours
        done
      "
    networks:
      - parking-network
    restart: unless-stopped

  # Monitoring (Optional - Prometheus)
  prometheus:
    image: prom/prometheus:latest
    container_name: parking-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - parking-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: parking-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - parking-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  parking-network:
    driver: bridge

volumes:
  grafana-storage:
